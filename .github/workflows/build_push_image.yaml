---
name: "build and push image"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  KUSTOMIZE_VERSION: v4.5.7

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v5.0.0

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=rtrox/kustomize_check
          DOCKER_PLATFORMS=linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          TAGS="--tag ${DOCKER_IMAGE}:latest"
          TAGS="$TAGS --tag ${DOCKER_IMAGE}:${KUSTOMIZE_VERSION}"
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            $TAGS --file ./Dockerfile ./

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.0

      - name: Docker Buildx (build)
        if: github.event_name == 'pull_request'
        run: |
          docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}

      - name: Docker Login
        if: success() && github.event_name == 'push'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin

      - name: Docker Buildx (push)
        if: success() && github.event_name == 'push'
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

      - name: Clear
        if: always() && github.event_name == 'push'
        run: |
          rm -f ${HOME}/.docker/config.json

  tag_release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - name: Create Tag
        uses: actions/github-script@v6
        continue-on-error: true
        with:
          script: |
            const { KUSTOMIZE_VERSION } = process.env
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${KUSTOMIZE_VERSION}`,
              sha: context.sha
            })

      - name: Update Tag
        uses: actions/github-script@v6
        with:
          script: |
            const { KUSTOMIZE_VERSION } = process.env
            github.rest.git.updateRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `tags/${KUSTOMIZE_VERSION}`,
              sha: context.sha
            })



